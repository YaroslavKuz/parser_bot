import asyncio
import os
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from bs4 import BeautifulSoup
from telegram import Bot
from telegram.error import TimedOut

# === –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Telegram ===
BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = int(os.getenv("CHAT_ID"))

# === –¶—ñ–ª—å–æ–≤–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ ===
URL = "https://coins.bank.gov.ua/catalog.html"

# === –®–ª—è—Ö –¥–æ —Ñ–∞–π–ª–∞ –∑ ID –º–æ–Ω–µ—Ç ===
SEEN_FILE = "seen.txt"

bot = Bot(token=BOT_TOKEN)

def load_seen_ids():
    """–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î ID –≤–∂–µ –Ω–∞–¥—ñ—Å–ª–∞–Ω–∏—Ö –º–æ–Ω–µ—Ç –∑ —Ñ–∞–π–ª–∞"""
    if not os.path.exists(SEEN_FILE):
        return set()
    with open(SEEN_FILE, "r", encoding="utf-8") as f:
        # –ü–∞—Ä—Å–∏–º–æ –ª–∏—à–µ ID –¥–æ —Å–∏–º–≤–æ–ª—É '|'
        return set(line.split("|")[0].strip() for line in f.readlines())

def save_seen_coin(coin_id, name):
    """–î–æ–¥–∞—î ID —Ç–∞ –Ω–∞–∑–≤—É –Ω–æ–≤–æ—ó –º–æ–Ω–µ—Ç–∏ –¥–æ —Ñ–∞–π–ª–∞"""
    with open(SEEN_FILE, "a", encoding="utf-8") as f:
        f.write(f"{coin_id}|{name}\n")

async def check_new_coins():
    print("üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å–∞–π—Ç –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é Selenium...")

    from selenium.webdriver.chrome.options import Options  # –¥–æ–¥–∞–π —Å—é–¥–∏

    options = Options()
    options.add_argument('--headless')
    options.add_argument('--no-sandbox')
    options.add_argument('--disable-dev-shm-usage')

    driver = webdriver.Chrome(service=Service(ChromeDriverManager().install()), options=options)
    driver.get(URL)

    try:
        WebDriverWait(driver, 15).until(
            EC.presence_of_element_located((By.CSS_SELECTOR, ".label3.product_label"))
        )
    except Exception as e:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤:", e)
        driver.quit()
        return

    html = driver.page_source
    driver.quit()

    soup = BeautifulSoup(html, 'html.parser')
    print(f"‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ –¥–æ–≤–∂–∏–Ω—É HTML: {len(html)}")

    coins = soup.find_all("div", class_="product")
    print(f"ü™ô –ó–Ω–∞–π–¥–µ–Ω–æ –º–æ–Ω–µ—Ç: {len(coins)}")

    seen_ids = load_seen_ids()

    for coin in coins:
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î –º—ñ—Ç–∫–∞ "—É –ø—Ä–æ–¥–∞–∂—É"
        label_div = coin.find("div", class_="product_labels")
        if not label_div:
            continue
        product_label = label_div.find("div", class_="label3 product_label")
        if not product_label:
            continue
        if "—É –ø—Ä–æ–¥–∞–∂—É" not in product_label.text.lower():
            continue

        description = coin.find("div", class_="p_description")
        if not description:
            continue

        checkbox = description.find("input", id=lambda x: x and x.startswith("compare_"))
        if not checkbox:
            continue

        coin_id = checkbox["id"].replace("compare_", "")
        if coin_id in seen_ids:
            continue  # –≤–∂–µ –±–∞—á–∏–ª–∏ —Ü—é –º–æ–Ω–µ—Ç—É

        name_tag = description.find("a", class_="model_product")
        name = name_tag.text.strip() if name_tag else "–ù–µ–≤—ñ–¥–æ–º–∞ –º–æ–Ω–µ—Ç–∞"
        link = name_tag['href'] if name_tag else "#"
        full_link = f"https://coins.bank.gov.ua{link}"

        p_tags = description.find_all("p")
        year_or_date = " | ".join(p.text.strip() for p in p_tags if p.text.strip())

        message = f"üÜï –ù–æ–≤–∞ –º–æ–Ω–µ—Ç–∞!\n\nü™ô *{name}*\nüìÜ {year_or_date}\nüîó [–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏]({full_link})"
        print("üì® –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ Telegram:")
        print(message)

        try:
            await bot.send_message(chat_id=CHAT_ID, text=message, parse_mode="Markdown")
            await asyncio.sleep(1)  # –∑–∞—Ç—Ä–∏–º–∫–∞, —â–æ–± –Ω–µ –ø–µ—Ä–µ–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ API
            save_seen_coin(coin_id, name)  # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ID —Ç–∞ –Ω–∞–∑–≤—É –º–æ–Ω–µ—Ç–∏
        except TimedOut:
            print("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞: —Ç–∞–π–º–∞—É—Ç –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è. –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ.")

if __name__ == "__main__":
    asyncio.run(check_new_coins())
